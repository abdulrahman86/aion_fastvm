package org.aion.fastvm;

import static org.junit.Assert.assertEquals;

import org.aion.base.db.IRepositoryCache;
import org.aion.base.type.AionAddress;
import org.aion.base.util.Hex;
import org.aion.mcf.vm.types.DataWord;
import org.aion.mcf.vm.types.KernelInterfaceForFastVM;
import org.aion.vm.DummyRepository;
import org.aion.vm.api.interfaces.Address;
import org.apache.commons.lang3.RandomUtils;
import org.junit.Test;

public class TrsTest {
    private byte[] txHash = RandomUtils.nextBytes(32);
    private Address origin = AionAddress.wrap(RandomUtils.nextBytes(32));
    private Address caller = origin;
    private Address address = AionAddress.wrap(RandomUtils.nextBytes(32));

    private Address blockCoinbase = AionAddress.wrap(RandomUtils.nextBytes(32));
    private long blockNumber = 1;
    private long blockTimestamp = System.currentTimeMillis() / 1000;
    private long blockNrgLimit = 5000000;
    private DataWord blockDifficulty = new DataWord(0x100000000L);

    private DataWord nrgPrice = new DataWord(1);
    private long nrgLimit = 5000000;
    private DataWord callValue = new DataWord(0);
    private byte[] callData;

    private int depth = 0;
    private int kind = ExecutionContext.CREATE;
    private int flags = 0;

    @Test
    public void testDeploy() {
        FastVM vm = new FastVM();
        byte[] code = getCode();
        callData = code;
        ExecutionContext ctx = newExecutionContext();
        FastVmTransactionResult result = vm.run(code, ctx, wrapInKernelInterface(new DummyRepository()));
        System.out.println("Code length: " + code.length);
        System.out.println(result);
    }

    private byte[] getCode() {
        return Hex.decode("6050604052600060076000509090555b3360006000508282909180600101839055555050505b61002a565b6111c5806100396000396000f3006050604052361561019e576000356c01000000000000000000000000900463ffffffff168063184274fc146101a25780632392b0f0146101d75780632ddbd13a146101fb5780632ed94f6c146102255780633ccfd60b1461028457806343c885ba146102b25780634cbf867d146102e0578063541482301461030a57806354469aea1461033f578063544736e6146103635780635f515226146103915780636ef61092146103d157806372a02f1d1461041157806372b0d90c1461042757806377b7aa2c1461046b57806379ba5097146104a35780638da5cb5b146104b957806390e2b94b146104ea578063a068425114610514578063a191fe281461053e578063a4caeb421461056b578063a6f9dae114610595578063ac3dc9aa146105c1578063be29184f146105eb578063c3af702e14610620578063cb13cddb1461064a578063cf3090121461068a578063d3b5dc3b146106b8578063d4ee1d90146106e2578063dd39472f14610713578063ef78d4fd1461074b578063f83d08ba14610775578063f9df65eb1461078b578063fdb1cc58146107b95761019e565b5b5b005b34156101ae5760006000fd5b6101d560048080806010013590359091602001909192908035906010019091905050610803565b005b34156101e35760006000fd5b6101f960048080359060100190919050506108f4565b005b34156102075760006000fd5b61020f61099b565b6040518082815260100191505060405180910390f35b34156102315760006000fd5b610282600480803590601001908201803590601001919190808060200260100160405190810160405280939291908181526010018383602002808284378201915050505050509090919050506109a4565b005b34156102905760006000fd5b610298610a12565b604051808215151515815260100191505060405180910390f35b34156102be5760006000fd5b6102c6610a4b565b604051808215151515815260100191505060405180910390f35b34156102ec5760006000fd5b6102f4610a5e565b6040518082815260100191505060405180910390f35b34156103165760006000fd5b61033d60048080806010013590359091602001909192908035906010019091905050610a65565b005b341561034b5760006000fd5b6103616004808035906010019091905050610ae9565b005b341561036f5760006000fd5b610377610b3c565b604051808215151515815260100191505060405180910390f35b341561039d5760006000fd5b6103bb60048080806010013590359091602001909192905050610b6a565b6040518082815260100191505060405180910390f35b34156103dd5760006000fd5b6103fb60048080806010013590359091602001909192905050610b9b565b6040518082815260100191505060405180910390f35b341561041d5760006000fd5b610425610bbd565b005b34156104335760006000fd5b61045160048080806010013590359091602001909192905050610c1a565b604051808215151515815260100191505060405180910390f35b34156104775760006000fd5b61048d6004808035906010019091905050610dab565b6040518082815260100191505060405180910390f35b34156104af5760006000fd5b6104b7610e06565b005b34156104c55760006000fd5b6104cd610e93565b604051808383825281601001526020019250505060405180910390f35b34156104f65760006000fd5b6104fe610ea2565b6040518082815260100191505060405180910390f35b34156105205760006000fd5b610528610eab565b6040518082815260100191505060405180910390f35b341561054a5760006000fd5b6105696004808035906010019091908035906010019091905050610eb4565b005b34156105775760006000fd5b61057f610f21565b6040518082815260100191505060405180910390f35b34156105a15760006000fd5b6105bf60048080806010013590359091602001909192905050610f2a565b005b34156105cd5760006000fd5b6105d5610f66565b6040518082815260100191505060405180910390f35b34156105f75760006000fd5b61061e60048080806010013590359091602001909192908035906010019091905050610f6f565b005b341561062c5760006000fd5b610634611044565b6040518082815260100191505060405180910390f35b34156106565760006000fd5b6106746004808080601001359035909160200190919290505061104d565b6040518082815260100191505060405180910390f35b34156106965760006000fd5b61069e61106f565b604051808215151515815260100191505060405180910390f35b34156106c45760006000fd5b6106cc611082565b6040518082815260100191505060405180910390f35b34156106ee5760006000fd5b6106f661108b565b604051808383825281601001526020019250505060405180910390f35b341561071f5760006000fd5b610735600480803590601001909190505061109a565b6040518082815260100191505060405180910390f35b34156107575760006000fd5b61075f6110dc565b6040518082815260100191505060405180910390f35b34156107815760006000fd5b6107896110f7565b005b34156107975760006000fd5b61079f611136565b604051808215151515815260100191505060405180910390f35b34156107c55760006000fd5b6107ed6004808035906010019091908035906010019091908035906010019091905050611149565b6040518082815260100191505060405180910390f35b600060005080600101549054339091149190141615156108235760006000fd5b600660019054906101000a900460ff1615801561084557506000600760005054145b15156108515760006000fd5b600d60009054906101000a900460ff1615151561086e5760006000fd5b806008600050600085858252816010015260200190815260100160002090506000828282505401925050819090905550806009600082828250540192505081909090555082827fc6dcd8d437d8b3537583463d84a6ba9d7e3e013fa4e004da9b6dee1482038be5846040518082815260100191505060405180910390a25b5b5b5b505050565b6000600060005080600101549054339091149190141615156109165760006000fd5b600660009054906101000a900460ff1615156109325760006000fd5b600660019054906101000a900460ff16801561095357506000600760005054145b151561095f5760006000fd5b8160076000508190909055503031905080600b60005081909090555080600960005081909090555080600a6000508190909055505b5b5b5b5050565b600b6000505481565b6000600d60009054906101000a900460ff161515156109c35760006000fd5b600090505b8151811015610a0c576109fd82828151811015156109e257fe5b90601001906020020180601001519051610c1a63ffffffff16565b505b80806001019150506109c8565b5b5b5050565b6000600d60009054906101000a900460ff16151515610a315760006000fd5b610a4033610c1a63ffffffff16565b9050610a47565b5b90565b600660009054906101000a900460ff1681565b62278d0081565b60006000508060010154905433909114919014161515610a855760006000fd5b600660019054906101000a900460ff16158015610aa757506000600760005054145b1515610ab35760006000fd5b82826108fc83908115029060405160006040518083038185898989f19450505050501515610ae15760006000fd5b5b5b5b505050565b60006000508060010154905433909114919014161515610b095760006000fd5b600d60009054906101000a900460ff16151515610b265760006000fd5b610b36338361080363ffffffff16565b5b5b5b50565b6000600660019054906101000a900460ff168015610b605750600060076000505414155b9050610b67565b90565b6000600860005060008484825281601001526020019081526010016000209050600050549050610b95565b92915050565b600c600050602052818160005260105260306000209050600091509150505481565b60006000508060010154905433909114919014161515610bdd5760006000fd5b600660009054906101000a900460ff16151515610bfa5760006000fd5b6001600660006101000a81548160ff0219169083151502179055505b5b5b565b6000600060006000600660019054906101000a900460ff168015610c445750600060076000505414155b1515610c505760006000fd5b600d60009054906101000a900460ff16151515610c6d5760006000fd5b600860005060008787825281601001526020019081526010016000209050600050549250600c60005060008787825281601001526020019081526010016000209050600050549150610cc683834261114963ffffffff16565b90506000811415610cda5760009350610da0565b8282820111151515610cec5760006000fd5b85856108fc83908115029060405160006040518083038185898989f19450505050501515610d1a5760006000fd5b80600c60005060008888825281601001526020019081526010016000209050600082828250540192505081909090555080600a600082828250540392505081909090555085857fb061022b0142dafc69e0206f0d1602f87e19faa0bd2befbf1d557f50a0dbb78e846040518082815260100191505060405180910390a260019350610da0565b5b5b50505092915050565b60006000826007600050541115610dc55760009150610e00565b600162278d006007600050548503811515610ddc57fe5b04019050600460005054811115610df857600460005054905080505b809150610e00565b50919050565b600260005080600101549054339091149190141615610e905760026000508060010154905460006000508282909180600101839055555050506000600060026000508282909180600101839055555050506000600050806001015490547fa701229f4b9ddf00aa1c7228d248e6320ee7c581d856ddfba036e73947cd0d1360405160405180910390a25b5b565b60006000508060010154905482565b60056000505481565b600a6000505481565b60006000508060010154905433909114919014161515610ed45760006000fd5b600660009054906101000a900460ff16151515610ef15760006000fd5b60008214151515610f025760006000fd5b8160046000508190909055508060056000508190909055505b5b5b5050565b60046000505481565b60006000508060010154905433909114919014161515610f4a5760006000fd5b818160026000508282909180600101839055555050505b5b5050565b60076000505481565b60006000508060010154905433909114919014161515610f8f5760006000fd5b600660019054906101000a900460ff16158015610fb157506000600760005054145b1515610fbd5760006000fd5b600d60009054906101000a900460ff16151515610fda5760006000fd5b8060086000506000858582528160100152602001908152601001600020905060005081909090555082827f56e184a04f4acbb46419fef039f6ceb5f04cb0ae59e0a0f971f128a2274ded9c846040518082815260100191505060405180910390a25b5b5b5b505050565b60096000505481565b6008600050602052818160005260105260306000209050600091509150505481565b600660019054906101000a900460ff1681565b64e8d4a5100081565b60026000508060010154905482565b60006004600050546005600050540164e8d4a510006110be84610dab63ffffffff16565b60056000505401028115156110cf57fe5b0490506110d7565b919050565b60006110ed42610dab63ffffffff16565b90506110f4565b90565b600060005080600101549054339091149190141615156111175760006000fd5b6001600660016101000a81548160ff0219169083151502179055505b5b565b600d60009054906101000a900460ff1681565b60006000600061115e8461109a63ffffffff16565b915064e8d4a5100082870281151561117257fe5b04905084811115611187578481039250611190565b60009250611190565b505093925050505600a165627a7a7230582044b394335ea2e96c396ba77543ccecf9036af5135a26644159f3ba3dce681a2c0029");
    }

    private static KernelInterfaceForFastVM wrapInKernelInterface(IRepositoryCache cache) {
        return new KernelInterfaceForFastVM(cache, true, false);
    }

    private ExecutionContext newExecutionContext() {
        return new ExecutionContext(
            null,
            txHash,
            address,
            origin,
            caller,
            nrgPrice,
            nrgLimit,
            callValue,
            callData,
            depth,
            kind,
            flags,
            blockCoinbase,
            blockNumber,
            blockTimestamp,
            blockNrgLimit,
            blockDifficulty);
    }

}
